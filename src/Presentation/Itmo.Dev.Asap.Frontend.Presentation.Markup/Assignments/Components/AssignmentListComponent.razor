@using Itmo.Dev.Asap.Frontend.Application.Abstractions.Assignments
@using System.Reactive.Subjects
@using System.Reflection
@using Itmo.Dev.Asap.Frontend.Presentation.Components.Display
@using Phazor.Components.Extensions
@inject IAssignmentListProvider AssignmentListProvider
@inject IJSRuntime Js

@if (_assignmentList is not null)
{
    <MudList Clickable="true" Class="assignment-list">
        <PhazorReactiveForEach Elements="_assignmentList.Values" Context="assignment">

            <MudListItem
                Value="assignment.Id"
                OnClick="@(() => OnListItemClicked(assignment))"
                OnClickHandlerPreventDefault="true">

                <PhazorReactiveText Value="assignment.Name"/>

            </MudListItem>

        </PhazorReactiveForEach>
    </MudList>
}

@code {
    private IAssignmentList? _assignmentList;

    [Parameter]
    public Guid SubjectCourseId { get; set; }

    [Parameter]
    public IDisplayContentConsumer? Display { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (SubjectCourseId.Equals(default))
            return;

        _assignmentList = await AssignmentListProvider.LoadAsync(SubjectCourseId, default);
    }

    private void OnListItemClicked(IAssignment assignment)
    {
        Display?.Consume(@<AssignmentComponent Assignment="assignment"/>);
    }

}